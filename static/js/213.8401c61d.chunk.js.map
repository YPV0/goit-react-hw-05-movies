{"version":3,"file":"static/js/213.8401c61d.chunk.js","mappings":"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","sources":["components/API/API.js","pages/MovieDetails.styled.jsx","pages/home.styled.jsx","pages/Movies.styled.jsx","pages/movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey = '42200b80456bf8bbad5e7a8d4195c4b9';\nconst baseUrl = 'https://api.themoviedb.org/3';\n\nconst instance = axios.create({\n  baseURL: baseUrl,\n  params: {\n    api_key: apiKey,\n    language: 'en-US',\n  },\n});\n\nconst queries = {\n  getTrending: '/trending/all/day',\n  getMovieDetails: '/movie/',\n  getMovieCast: '/credits',\n  getMovieReviews: '/reviews',\n  getMovieSearch: '/search/movie',\n};\n\nexport async function getTrending() {\n  try {\n    const { data } = await instance.get(queries.getTrending);\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovies(name) {\n  try {\n    const { data } = await instance.get(queries.getMovieSearch, {\n      params: {\n        query: name,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  try {\n    const { data } = await instance.get(queries.getMovieDetails + movieId);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(movieId) {\n  try {\n    const { data } = await instance.get(\n      queries.getMovieDetails + movieId + queries.getMovieCast\n    );\n    return data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const { data } = await instance.get(\n      queries.getMovieDetails + movieId + queries.getMovieReviews\n    );\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieSearch(query) {\n  try {\n    const { data } = await instance.get(queries.getMovieSearch, {\n      params: {\n        query: query,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import styled from 'styled-components';\nimport { NavLink as RouterLink } from 'react-router-dom';\n\nexport const MovieTitle = styled.h1`\n  font-size: 2em;\n  margin-bottom: 1em;\n`;\n\nexport const OverviewTitle = styled.h2`\n  font-size: 1.6em;\n  margin-top: 1em;\n`;\n\nexport const GenreList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n  gap: 1em;\n`;\n\nexport const StyledLink = styled(RouterLink)`\n  color: inherit;\n  text-decoration: none;\n  font-size: 22px;\n  padding: 5px;\n  border: 2px solid black;\n\n  &:hover {\n    color: inherit;\n    text-decoration: underline;\n  }\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n`;\n\nexport const InfoWrapper = styled.div`\n  margin-top: 100px;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  margin-bottom: 1em;\n`;\n\nexport const StyledDiv = styled.div`\n  display: flex;\n  gap: 50px;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const HomeTitle = styled.h1`\n  text-align: center;\n  color: #333;\n`;\n\nexport const MovieList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 20px;\n`;\n\nexport const MovieItem = styled.li`\n  background-color: #eee;\n  padding: 10px;\n  border-radius: 5px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #333;\n  &:hover {\n    color: #777;\n  }\n`;\n","import styled from 'styled-components';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  gap: 1em;\n  margin-bottom: 2em;\n  max-width: 500px;\n`;\n\nexport const SearchInput = styled.input`\n  flex-grow: 1;\n  padding: 0.5em;\n`;\n\nexport const SearchButton = styled.button`\n  padding: 0.5em 1em;\n`;\n\nexport const MoviesList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 1em;\n`;\n\nexport const MovieItem = styled.li``;\n\nexport const MovieImage = styled.img`\n  width: 100%;\n  height: auto;\n  display: block;\n`;\n\nexport const MovieTitle = styled.p`\n  margin-top: 0.5em;\n`;\nexport const StyledLink = styled(RouterLink)`\n  color: inherit;\n  text-decoration: none;\n\n  &:hover {\n    color: inherit;\n    text-decoration: underline;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation, useNavigate } from 'react-router-dom';\nimport { getMovies } from 'components/API/API';\nimport {\n  MovieImage,\n  MoviesList,\n  SearchButton,\n  SearchForm,\n  SearchInput,\n  StyledLink,\n} from './Movies.styled';\nimport { MovieItem } from './home.styled';\nimport { MovieTitle } from './MovieDetails.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState('');\n  const [search, setSearch] = useState('');\n  const [searchParams] = useSearchParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (searchParams.get('query')) {\n      getMovies(searchParams.get('query')).then(data => setMovies(data));\n    }\n  }, [searchParams]);\n\n  const handleSearch = e => {\n    e.preventDefault();\n    setSearch(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (search) {\n      navigate(`/movies?query=${encodeURIComponent(search)}`);\n      setSearch('');\n    }\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchInput\n          type=\"text\"\n          placeholder=\"Search for movies\"\n          value={search}\n          onChange={handleSearch}\n        />\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </SearchForm>\n      <MoviesList>\n        {movies &&\n          movies.map(movie => {\n            const movieImage = movie.poster_path\n              ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n              : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQapfIYpE8vRHlXT5eFwaqr9RGezphQiy3UeQ&usqp=CAU';\n            return (\n              <MovieItem key={movie.id}>\n                <StyledLink\n                  to={{\n                    pathname: `/movies/${movie.id}`,\n                    state: { from: location },\n                  }}\n                >\n                  <MovieImage src={movieImage} alt={movie.title} />\n                  <MovieTitle>{movie.title}</MovieTitle>\n                </StyledLink>\n              </MovieItem>\n            );\n          })}\n      </MoviesList>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["instance","axios","baseURL","params","api_key","language","queries","getTrending","get","data","results","console","log","getMovies","name","query","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","MovieTitle","styled","OverviewTitle","GenreList","StyledLink","RouterLink","Card","InfoWrapper","StyledDiv","HomeTitle","MovieList","MovieItem","MovieLink","Link","SearchForm","SearchInput","SearchButton","MoviesList","MovieImage","useState","movies","setMovies","search","setSearch","useSearchParams","searchParams","location","useLocation","navigate","useNavigate","useEffect","then","onSubmit","e","preventDefault","encodeURIComponent","type","placeholder","value","onChange","target","map","movie","movieImage","poster_path","to","pathname","id","state","from","src","alt","title"],"sourceRoot":""}