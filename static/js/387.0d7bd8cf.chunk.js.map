{"version":3,"file":"static/js/387.0d7bd8cf.chunk.js","mappings":"6PAGaA,EAAcC,EAAAA,GAAAA,GAAH,4DAKXC,EAAaD,EAAAA,GAAAA,GAAH,+CAIVE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,+IAUVI,EAAUJ,EAAAA,GAAAA,EAAH,4E,SCkBpB,EAnCgB,WACd,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,WACJJ,IACFK,EAAAA,EAAAA,IAAgBL,GAASM,MAAK,SAAAC,GAAI,OAAIR,EAAWQ,EAAf,GAErC,GAAE,CAACP,KAGF,+BACE,SAACT,EAAD,UACGO,EAAQU,OAAS,EAChBV,EAAQW,KAAI,SAAAC,GAAM,OAChB,SAACjB,EAAD,WACE,SAACC,EAAD,CACEiB,GAAI,CACFC,SAAS,YAAD,OAAcF,EAAOG,IAC7BC,MAAO,CAAEC,KAAMb,IAHnB,UAME,uBAAIQ,EAAOM,YAPEN,EAAOG,GADR,KAalB,SAACjB,EAAD,UAAS,gDAKlB,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const ReviewItem = styled.li`\n  margin-bottom: 1em;\n`;\n\nexport const StyledLink = styled(RouterLink)`\n  color: inherit;\n  text-decoration: none;\n\n  &:hover {\n    color: inherit;\n    text-decoration: underline;\n  }\n`;\n\nexport const StyledP = styled.p`\n  font-size: 22px;\n  padding: 5px;\n  color: red;\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'components/API/API';\nimport { ReviewItem, ReviewsList, StyledLink, StyledP } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState('');\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (movieId) {\n      getMovieReviews(movieId).then(data => setReviews(data));\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      <ReviewsList>\n        {reviews.length > 0 ? (\n          reviews.map(review => (\n            <ReviewItem key={review.id}>\n              <StyledLink\n                to={{\n                  pathname: `/reviews/${review.id}`,\n                  state: { from: location },\n                }}\n              >\n                <p>{review.author}</p>\n              </StyledLink>\n            </ReviewItem>\n          ))\n        ) : (\n          <StyledP>We don't have any reviews for this movie</StyledP>\n        )}\n      </ReviewsList>\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["ReviewsList","styled","ReviewItem","StyledLink","RouterLink","StyledP","useState","reviews","setReviews","movieId","useParams","location","useLocation","useEffect","getMovieReviews","then","data","length","map","review","to","pathname","id","state","from","author"],"sourceRoot":""}