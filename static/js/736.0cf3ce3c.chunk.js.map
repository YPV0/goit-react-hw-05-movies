{"version":3,"file":"static/js/736.0cf3ce3c.chunk.js","mappings":"iQAGaA,EAAWC,EAAAA,GAAAA,GAAH,iLASRC,EAAWD,EAAAA,GAAAA,GAAH,kNAURE,EAAYF,EAAAA,GAAAA,EAAH,2LAUTG,EAAaH,EAAAA,GAAAA,IAAH,uGAOVI,EAAYJ,EAAAA,GAAAA,IAAH,6GAOTK,GAAaL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,+I,SCOvB,EAzCa,WACX,OAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,WACJJ,IACFK,EAAAA,EAAAA,IAAaL,GAASM,MAAK,SAAAC,GAAI,OAAIR,EAAQQ,EAAZ,GAElC,GAAE,CAACP,KAGF,+BACE,SAACX,EAAD,UACGS,GACCA,EAAKU,KAAI,SAAAC,GACP,IAAMC,EAAQD,EAAME,aAAN,yCACwBF,EAAME,cACxC,sGAEJ,OACE,SAACpB,EAAD,WACE,SAACI,EAAD,CACEiB,GAAI,CACFC,SAAS,SAAD,OAAWJ,EAAMK,IACzBC,MAAO,CAAEC,KAAMd,IAHnB,UAME,UAACR,EAAD,YACE,SAACD,EAAD,CAAYwB,IAAKP,EAAOQ,IAAKT,EAAMU,QACnC,SAAC3B,EAAD,UAAYiB,EAAMU,aATTV,EAAMK,GAcxB,OAIV,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 30px;\n  margin-top: 30px;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #f5f5f5;\n  padding: 15px;\n  border-radius: 10px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n`;\n\nexport const ActorName = styled.p`\n  margin-top: 1em;\n  font-size: 1.2em;\n  text-align: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  text-decoration: none;\n`;\n\nexport const ActorImage = styled.img`\n  width: 100%;\n  height: 300px;\n  object-fit: cover;\n  border-radius: 5px;\n`;\n\nexport const ActorInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const StyledLink = styled(RouterLink)`\n  color: inherit;\n  text-decoration: none;\n\n  &:hover {\n    color: inherit;\n    text-decoration: underline;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { getMovieCast } from 'components/API/API';\nimport {\n  ActorImage,\n  ActorInfo,\n  ActorName,\n  CastItem,\n  CastList,\n  StyledLink,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState('');\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (movieId) {\n      getMovieCast(movieId).then(data => setCast(data));\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      <CastList>\n        {cast &&\n          cast.map(actor => {\n            const image = actor.profile_path\n              ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n              : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQapfIYpE8vRHlXT5eFwaqr9RGezphQiy3UeQ&usqp=CAU';\n\n            return (\n              <CastItem key={actor.id}>\n                <StyledLink\n                  to={{\n                    pathname: `/cast/${actor.id}`,\n                    state: { from: location },\n                  }}\n                >\n                  <ActorInfo>\n                    <ActorImage src={image} alt={actor.name} />\n                    <ActorName>{actor.name}</ActorName>\n                  </ActorInfo>\n                </StyledLink>\n              </CastItem>\n            );\n          })}\n      </CastList>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["CastList","styled","CastItem","ActorName","ActorImage","ActorInfo","StyledLink","RouterLink","useState","cast","setCast","movieId","useParams","location","useLocation","useEffect","getMovieCast","then","data","map","actor","image","profile_path","to","pathname","id","state","from","src","alt","name"],"sourceRoot":""}